# Étape 1: Construction de l'application (build stage)
FROM python:3.11-slim AS build-stage

# Définir le répertoire de travail
WORKDIR /app

# Installer les dépendances système nécessaires
RUN apt-get update && apt-get install -y \
    libpq-dev \
    gcc \
    python3-dev \
    --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copier le fichier requirements.txt et installer les dépendances Python
COPY ./requirements.txt /app/ 
RUN pip install --upgrade pip
RUN pip install -r /app/requirements.txt

# Copier le code source de l'application Django dans le conteneur
COPY . .
# COPY ./src/ml /app/src/ml

# Lister les fichiers dans /app pour débogage
RUN ls /app

# Étape 2: Image d'exécution distroless (runtime stage)
FROM gcr.io/distroless/python3-debian12 AS runtime-stage


# Copier les fichiers nécessaires du build stage
COPY --from=build-stage /app /app

# Exposer le port sur lequel l'application va tourner
EXPOSE 8000

# Définir la variable d'environnement pour Django
ENV DJANGO_SETTINGS_MODULE=loan_classifier.loan_classifier.settings

# Copier les fichiers du modèle et du scaler dans le conteneur
# COPY 100k_ann_model.keras /app/100k_ann_model.keras
# COPY scaler.pkl /app/scaler.pkl

# Commande pour lancer l'application Django avec Gunicorn
CMD ["gunicorn", "-b", "0.0.0.0:8000", "loan_classifier.loan_classifier.wsgi:application"]